{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["HOST_API","initialState","list","Store","createContext","Form","dispatch","useContext","formRef","useRef","useState","state","setState","ref","type","name","onChange","event","nombre","target","value","onClick","preventDefault","request","raza","habilidad","nivelDePoder","urlImagen","fetch","method","body","JSON","stringify","headers","then","response","json","hero","item","current","reset","List","useEffect","length","map","id","src","alt","width","height","reducer","action","newList","push","StoreProvider","children","useReducer","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGMA,EAAW,8CACXC,EAAe,CACnBC,KAAK,IAGDC,EAAQC,wBAAcH,GAEtBI,EAAO,WACX,IAAOC,EAAYC,qBAAWJ,GAAvBG,SACDE,EAAUC,iBAAO,MACvB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KA6BA,OAAM,uBAAMC,IAAKL,EAAX,UACN,uBAAOM,KAAK,OAAOC,KAAK,SAASC,SAAU,SAACC,GAC1CL,EAAS,2BAAID,GAAL,IAAYO,OAAQD,EAAME,OAAOC,YAE3C,wBAAQC,QA/BM,SAACJ,GACbA,EAAMK,iBAEN,IAAMC,EAAU,CACdL,OAAQP,EAAMO,OACdM,KAAM,GACNC,UAAW,GACXC,aAAc,EACdC,UAAW,IAGbC,MAAM5B,EAAW,gBAAgB,CAE/B6B,OAAQ,OACRC,KAAMC,KAAKC,UAAUT,GACrBU,QAAQ,CACN,eAAe,sBAGlBC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAACG,GACL/B,EAAS,CAACQ,KAAK,WAAYwB,KAAKD,IAChCzB,EAAS,CAACM,OAAO,KACjBV,EAAQ+B,QAAQC,YAQpB,yBAIIC,EAAM,WACV,MAA0BlC,qBAAWJ,GAA9BG,EAAP,EAAOA,SAAUK,EAAjB,EAAiBA,MAcjB,OAZA+B,qBAAU,WACRd,MAAM5B,EAAS,UAAU,CAEvB6B,OAAQ,QAGTK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAChC,GACLI,EAAS,CAACQ,KAAK,cAAcZ,cAE/B,CAACS,EAAMT,KAAKyC,OAAQrC,IAEhB,8BACJ,kCACE,gCACE,+BACE,oCACA,wCACA,sCACA,2CACA,6CACA,6CAGJ,gCACGK,EAAMT,KAAK0C,KAAI,SAACP,GACf,OAAO,+BACL,6BAAKA,EAAKQ,KACV,6BAAKR,EAAKnB,SACV,6BAAKmB,EAAKb,OACV,6BAAKa,EAAKZ,YACV,6BAAKY,EAAKX,eACV,6BAAI,qBAAKoB,IAAKT,EAAKV,UAAWoB,IAAI,OAAOC,MAAM,MAAMC,OAAO,YAN9CZ,EAAKQ,eAc/B,SAASK,EAAQvC,EAAMwC,GACrB,OAAOA,EAAOrC,MACZ,IAAK,cACH,kCAAUH,GAAV,IAAgBT,KAAMiD,EAAOjD,OAC/B,IAAK,WACH,IAAMkD,EAAUzC,EAAMT,KAEtB,OADAkD,EAAQC,KAAKF,EAAOb,MACpB,2BAAU3B,GAAV,IAAgBT,KAAKkD,IACvB,QACE,OAAOzC,GAKb,IAAM2C,EAAgB,SAAC,GAAe,IAAdC,EAAa,EAAbA,SACtB,EAA0BC,qBAAWN,EAASjD,GAA9C,mBAAOU,EAAP,KAAcL,EAAd,KACA,OAAM,cAACH,EAAMsD,SAAP,CAAgBrC,MAAO,CAACT,QAAOL,YAA/B,SACHiD,KAWUG,MAPf,WACE,OAAO,eAAC,EAAD,WACL,cAAC,EAAD,IACA,cAAC,EAAD,QCzGWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f231e974.chunk.js","sourcesContent":["import './App.css';\nimport React, {useContext, useReducer, useEffect, useRef,useState,createContext } from 'react';\n\nconst HOST_API = \"https://app-heroes-of-legends.herokuapp.com\";\nconst initialState = {\n  list:[]\n}\n\nconst Store = createContext(initialState)\n\nconst Form = () => {\n  const {dispatch} = useContext(Store);\n  const formRef = useRef(null);\n  const [state, setState] = useState({});\n\n  const onAdd = (event) => {\n    event.preventDefault();\n\n    const request = {\n      nombre: state.nombre,\n      raza: \"\",\n      habilidad: \"\", \n      nivelDePoder: 0,\n      urlImagen: \"\"\n    };\n\n    fetch(HOST_API + '/heroes/crear',{\n      //mode: 'no-cors',\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers:{\n        'Content-Type':'application/json'\n      }\n    })\n    .then(response =>response.json())\n    .then((hero) => {\n      dispatch({type:\"add-item\", item:hero});\n      setState({nombre:\"\"});\n      formRef.current.reset();\n    });\n  }\n\n  return<form ref={formRef}>\n  <input type=\"text\" name=\"nombre\" onChange={(event)=>{\n    setState({...state, nombre: event.target.value})\n  }}></input>\n  <button onClick={onAdd}>Agregar</button>\n</form>\n}\n\nconst List =() =>{\n  const {dispatch, state} = useContext(Store);\n\n  useEffect(()=>{\n    fetch(HOST_API+\"/heroes\",{\n      //mode: 'no-cors',\n      method: \"GET\",\n      }\n    )\n    .then(response => response.json())\n    .then((list)=>{\n      dispatch({type:\"update-list\",list})\n    })\n  },[state.list.length, dispatch]);\n\n  return<div>\n    <table>\n      <thead>\n        <tr>\n          <td>ID</td>\n          <td>NOMBRE</td>\n          <td>RAZA</td>\n          <td>HABILIDAD</td>\n          <td>NIVEL PODER</td>\n          <td>IMAGEN</td>\n        </tr>\n      </thead>\n      <tbody>\n        {state.list.map((hero)=>{\n          return <tr key={hero.id}>\n            <td>{hero.id}</td>\n            <td>{hero.nombre}</td>\n            <td>{hero.raza}</td>\n            <td>{hero.habilidad}</td>\n            <td>{hero.nivelDePoder}</td>\n            <td><img src={hero.urlImagen} alt=\"Hero\" width=\"200\" height=\"200\"/></td>\n          </tr>\n        })}\n      </tbody>\n    </table>\n  </div>\n}\n\nfunction reducer(state,action){\n  switch(action.type){\n    case 'update-list':\n      return{...state,list: action.list}\n    case 'add-item':\n      const newList = state.list;\n      newList.push(action.item);\n      return{...state,list:newList}\n    default:\n      return state;\n  }\n}\n\n\nconst StoreProvider = ({children}) =>{\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return<Store.Provider value={{state, dispatch}}>\n    {children}\n    </Store.Provider> \n}\n\nfunction App() {\n  return <StoreProvider>\n    <Form/>\n    <List/>\n  </StoreProvider>\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}