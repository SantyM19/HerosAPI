{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["HOST_API","initialState","list","Store","createContext","Form","useContext","dispatch","formRef","useRef","useState","state","setState","ref","type","name","onChange","event","nombre","target","value","raza","habilidad","nivelDePoder","urlImagen","onClick","preventDefault","request","console","log","axios","post","then","response","catch","error","List","useEffect","fetch","method","json","length","map","hero","id","src","alt","width","height","reducer","action","newList","push","item","StoreProvider","children","useReducer","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bb356cd.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport React, {\r\n  useContext,\r\n  useReducer,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  createContext,\r\n} from \"react\";\r\n\r\nimport axios from \"axios\" \r\n\r\nconst HOST_API = \"https://app-heroes-of-legends.herokuapp.com\";\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\nconst Store = createContext(initialState);\r\n\r\nconst Form = () => {\r\n  const { dispatch } = useContext(Store);\r\n  const formRef = useRef(null);\r\n  const [state, setState] = useState({});\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      nombre: state.nombre,\r\n      raza: state.raza,\r\n      habilidad: state.habilidad,\r\n      nivelDePoder: state.nivelDePoder,\r\n      urlImagen: state.urlImagen\r\n    };\r\n\r\n    console.log(request);\r\n\r\n    axios.post(HOST_API + \"/heroes/crear\", \r\n      request\r\n    )\r\n    .then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n    /*fetch(HOST_API + \"/heroes/crear\", {\r\n      method: \"POST\",\r\n      body: request,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((heroes) => {\r\n        dispatch({ type: \"add-item\", item: heroes });\r\n        setState({ nombre: \"\" });\r\n        formRef.current.reset();\r\n      });*/\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef}>\r\n      <label>Name</label>\r\n      <br></br>\r\n      <input\r\n        type=\"text\"\r\n        name=\"nombre\"\r\n        onChange={(event) => {\r\n          setState({ ...state, nombre: event.target.value });\r\n        }}\r\n      ></input>\r\n      <br></br>\r\n      <label>Raza</label>\r\n      <br></br>\r\n      <input\r\n        type=\"text\"\r\n        name=\"raza\"\r\n        onChange={(event) => {\r\n          setState({ ...state, raza: event.target.value });\r\n        }}\r\n      ></input>\r\n      <br></br>\r\n      <label>Habilidad</label>\r\n      <br></br>\r\n      <input\r\n        type=\"text\"\r\n        name=\"habilidad\"\r\n        onChange={(event) => {\r\n          setState({ ...state, habilidad: [event.target.value] });\r\n        }}\r\n      ></input>\r\n      <br></br>\r\n      <label>NNivel de Poder</label>\r\n      <br></br>\r\n      <input\r\n        type=\"text\"\r\n        name=\"nivelDePoder\"\r\n        onChange={(event) => {\r\n          setState({ ...state, nivelDePoder: event.target.value });\r\n        }}\r\n      ></input>\r\n      <br></br>\r\n      <label>urlImagen</label>\r\n      <br></br>\r\n      <input\r\n        type=\"text\"\r\n        name=\"urlImagen\"\r\n        onChange={(event) => {\r\n          setState({ ...state, urlImagen: event.target.value });\r\n        }}\r\n      ></input>\r\n      <br></br>\r\n\r\n      <button onClick={onAdd}>Agregar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst List = () => {\r\n  const { dispatch, state } = useContext(Store);\r\n\r\n  useEffect(() => {\r\n    fetch(HOST_API + \"/heroes\", {\r\n      //mode: 'no-cors',\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"update-list\", list });\r\n      });\r\n  }, [state.list.length, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td>ID</td>\r\n            <td>NOMBRE</td>\r\n            <td>RAZA</td>\r\n            <td>HABILIDAD</td>\r\n            <td>NIVEL PODER</td>\r\n            <td>IMAGEN</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {state.list.map((hero) => {\r\n            return (\r\n              <tr key={hero.id}>\r\n                <td>{hero.id}</td>\r\n                <td>{hero.nombre}</td>\r\n                <td>{hero.raza}</td>\r\n                <td>{hero.habilidad}</td>\r\n                <td>{hero.nivelDePoder}</td>\r\n                <td>\r\n                  <img\r\n                    src={hero.urlImagen}\r\n                    alt=\"Hero\"\r\n                    width=\"200\"\r\n                    height=\"200\"\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"update-list\":\r\n      return { ...state, list: action.list };\r\n    case \"add-item\":\r\n      const newList = state.list;\r\n      newList.push(action.item);\r\n      return { ...state, list: newList };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>{children}</Store.Provider>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <StoreProvider>\r\n      <Form />\r\n      <List />\r\n    </StoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}